[AS_BattlePositions] - v1.0.0
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Criação do plugin inicial para ajustar posições de atores e inimigos na batalha lateral para resolução 1920x1080.
Alterações:
- Criação do arquivo `AS_BattlePositions.js` com parâmetros:
  - ActorBaseX (1200)
  - ActorBaseY (540)
  - ActorSpacingX (160)
  - ActorSpacingY (48)
  - EnemyOffsetX (0)
  - EnemyOffsetY (0)
Observações:
- Implementação mínima. Override de `Sprite_Actor.prototype.setActorHome` e `Sprite_Enemy.prototype.setBattler` para aplicar offsets.

---
[AS_BattlePositions] - v1.0.1
Data: 25/09/2025 12:30:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Adiciona presets de resolução e escala automática baseada em Graphics.width/Graphics.height. Ajusta posições dos atores/inimigos proporcionalmente.
Alterações:
- Bump versão para 1.0.1
- Adicionado cálculo de scaleFactor (ScaleMode: none/width/height/min/max)
- Aplicado SCALE a ActorBaseX/ActorBaseY/ActorSpacing e EnemyOffset
- Mantida compatibilidade com referências originais dos métodos
Observações:
- Preset é suportado como parâmetro (estrutura pronta), mas mapeamentos por preset ainda precisam ajustes finos.
- Recomendado testar no RPG Maker MZ para confirmar estética em diferentes resoluções.

---
[AS_BattlePositions] - v1.0.2
Data: 25/09/2025 13:45:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Implementa presets e posicionamento relativo com base nas dimensões reais da tela usando `Graphics.width`/`Graphics.height`.
Alterações principais:
- Bump versão para 1.0.2
- Adicionado parâmetro `Preset` com opções: 1920x1080, 1366x768, 1280x720. Quando preenchido, o plugin calcula posições relativas automaticamente usando ratios derivadas da referência 1920x1080.
- `setActorHome` atualizado para calcular posições dos atores via ratios (ex.: x = Graphics.width * baseXRatio + index * Graphics.width * spacingXRatio).
- `setBattler` atualizado para aplicar offsets de inimigos relativos à tela atual quando `Preset` ativo.
- Mantida compatibilidade: se `Preset` estiver vazio, o plugin usa os parâmetros manuais e um fator de escala baseado em 1920x1080.

Observações:
- Esta versão aplica posicionamento proporcional em runtime, mas NÃO inclui integração automática com as Opções do jogo nem persistência em `ConfigManager` (essas features podem ser adicionadas em versões futuras). Se você estiver usando uma build que suporte redimensionamento dinâmico, o cálculo refletirá imediatamente as dimensões atuais; caso contrário teste com a resolução do jogo em que será jogado.

Recomendações de testes:
- Ative o plugin e escolha um `Preset` no parâmetro do plugin (no RPG Maker). Em seguida execute o jogo na resolução alvo e verifique as posições em batalhas laterais.
- Para afinar visualmente: ajuste `ActorBaseX`, `ActorBaseY`, `ActorSpacingX` e `ActorSpacingY` caso o posicionamento fique fora do desejado.

---

[AS_BattlePositions] - v1.0.3
Data: 25/09/2025 14:20:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Adiciona Snap-to-grid, alinhamento horizontal (left/center/right) e espaçamento uniforme entre atores.
Alterações principais:
- Bump versão para 1.0.3
- Novos parâmetros: `EnableSnap` (boolean), `GridSizeX`, `GridSizeY`, `AlignMode` (center/left/right), `UniformSpacing` (boolean)
- Implementadas funções auxiliares: `snapToGrid`, `computeUniformSpacing`, `applyAlignmentAndSnap`
- `setActorHome` agora calcula posições para todos os atores e aplica alinhamento/espacamento/snap antes de definir `setHome` para cada sprite
- `setBattler` aplica snap aos offsets dos inimigos quando `EnableSnap` ativo

Observações:
- Espaçamento uniforme distribui atores entre a área disponível quando ativado; ajuste os parâmetros de base para melhores resultados.
- Alinhamento `left`/`right` aplica uma margem mínima automática (32 px) para evitar sprites encostados nas bordas.

Recomendações de testes:
- Ative `EnableSnap=true` e teste `GridSizeX/Y` em 8/16 para ver o efeito de snap.
- Ative `UniformSpacing=true` em batalhas com múltiplos atores para validar a distribuição.

---

[AS_BattlePositions] - v1.0.4
Data: 25/09/2025 15:10:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Implementa sistema de layouts de formação para atores e inimigos, incluindo formações: diagonal, horizontal, vertical, escada, escadaInvertida e grid.
Alterações principais:
- Bump versão para 1.0.4
- Novos parâmetros: `ActorLayout` e `EnemyLayout` (diagonal/horizontal/vertical/escada/escadaInvertida/grid), `ActorGridCols`, `EnemyGridCols`
- Adicionada função `normalizeLayout()` para suporte a variações de escrita
- `computeActorPositions()` implementa todos os layouts de formação para atores
- `computeEnemyPositions()` implementa todos os layouts de formação para inimigos (exceto 'troop' que mantém posições originais)
- Integração com `Scene_Battle` para aplicar layouts automaticamente no início da batalha

Observações:
- Layout 'escada': forma escada descendente (X e Y crescem juntos)
- Layout 'escadaInvertida': forma escada ascendente (X cresce, Y decresce)
- Layout 'grid': distribui em grade usando número de colunas configurável
- Layout 'troop' (apenas inimigos): mantém posições originais do editor de tropas

Recomendações de testes:
- Teste cada layout em batalhas com diferentes números de atores/inimigos
- Para layout 'grid', ajuste `ActorGridCols`/`EnemyGridCols` conforme necessário
- Layouts funcionam com todos os recursos anteriores (presets, snap, alinhamento)

---

[AS_BattlePositions] - v1.0.5
Data: 25/09/2025 16:30:00
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Versão simplificada que remove complexidade desnecessária, mantendo apenas os recursos essenciais de layouts e presets automáticos.
Alterações principais:
- Bump versão para 1.0.5
- **REMOVIDOS** parâmetros complexos: ActorBaseX/Y, ActorSpacingX/Y, EnemyOffsetX/Y, EnableSnap, GridSizeX/Y, AlignMode, UniformSpacing
- **MANTIDOS** parâmetros essenciais: Preset, EnableDebugOverlay, ActorLayout, ActorGridCols, EnemyLayout, EnemyGridCols
- Posicionamento baseado exclusivamente em ratios fixos otimizados para diferentes resoluções
- Atores: baseX: 1200/1920, baseY: 540/1080, spacingX: 160/1920, spacingY: 48/1080
- Inimigos: baseX: 0.25, baseY: 0.5, spacingX: 140/1920, spacingY: 64/1080
- Removidas funções obsoletas: `snapToGrid()`, `computeUniformSpacing()`, `applyAlignmentAndSnap()`
- Simplificadas funções: `computeActorPositions()` e `computeEnemyPositions()` usam apenas preset ratios
- Adicionado debug overlay visual para verificação de posições em batalha

Observações:
- Esta versão prioriza simplicidade e facilidade de uso
- Todos os layouts (diagonal, horizontal, vertical, escada, escadaInvertida, grid) funcionam perfeitamente
- Escala automática usando `Graphics.width/Graphics.height` mantida e otimizada
- Debug overlay mostra cruzes vermelhas (atores) e verdes (inimigos) com coordenadas

Recomendações de testes:
- Ative `EnableDebugOverlay=true` para visualizar posições calculadas
- Teste todos os layouts em diferentes resoluções usando o sistema de presets
- Plugin agora é plug-and-play: escolha o preset e layout desejados, sem necessidade de ajustes manuais

---

[AS_BattlePositions] - v1.0.6
Data: 25/09/2025 17:20:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Refinamentos em layout e novos parâmetros para alinhamento de inimigos e espaçamento.
Alterações principais:
- Bump versão para 1.0.6
- Adicionados parâmetros de alinhamento e espaçamento para inimigos:
  - `EnemyAlignmentVertical` (top/center/bottom/custom)
  - `EnemyAlignmentHorizontal` (left/center/right/mirror/custom)
  - `EnemyVerticalOffset`, `EnemyHorizontalOffset`
  - `EnemySpacingMultiplier`
- Implementada função `calculateEnemyAlignment()` para ajustar posições de inimigos com base nas bounds dos atores
- Adicionado `Sprite_DebugOverlay` para desenho de cruzes e coordenadas durante o playtest
- `computeActorPositions()` e `computeEnemyPositions()` atualizadas para usar ratios e layout existentes

Observações:
- Alinhamento `mirror` espelha o grupo inimigo em relação ao centro da tela
- O multiplicador de espaçamento facilita ajustes rápidos sem alterar ratios base

Recomendações de testes:
- Teste `EnemyAlignment*` em conjunto com vários layouts para validar posicionamento
- Ative `EnableDebugOverlay` para conferir coordenadas e comportamentos

---

[AS_BattlePositions] - v1.0.7
Data: 25/09/2025 18:05:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Introduz sistema de boss e expansão de parâmetros (Boss, distância, logs) e melhorias no alinhamento.
Alterações principais:
- Bump versão para 1.0.7
- Adicionado sistema de formação de boss:
  - `BossEnemyId` (selecionável no banco de dados)
  - `BossDistance` (multiplicador de afastamento do boss)
  - Função `arrangeBossFormation()` que posiciona o boss atrás dos protetores
- Melhorias na `calculateEnemyAlignment()` e logs de debug no console
- `Scene_Battle` agora aplica atualizações periódicas (frameCount % 30) para reposicionar inimigos dinamicamente

Observações:
- Quando configurado, o boss é detectado automaticamente e o grupo é reorganizado mantendo a estética do layout
- Logs adicionais ajudam a depurar grids e alinhamentos

Recomendações de testes:
- Configure um inimigo como boss e teste `BossDistance` para ajustar a profundidade
- Verifique combates com `EnemyLayout = grid` e com/sem boss para checar distribuição

---

[AS_BattlePositions] - v1.0.8
Data: 25/09/2025 19:00:00 (Hora assumida - atualize se preferir)
Autor: Necromante96Official & GitHub Copilot
Caminho do plugin: `js/plugins/AS_BattlePositions.js`
Descrição: Polimento final — adiciona offsets globais para atores, melhor captura de posições troop, regras de grid refinadas e ajustes no alinhamento.
Alterações principais:
- Bump versão para 1.0.8
- Adicionados parâmetros para offsets globais dos atores:
  - `ActorVerticalOffset`, `ActorHorizontalOffset`
- `computeActorPositions()` aplica offsets globais para ajuste fino da linha base dos atores
- `computeEnemyPositions()` melhorou captura e reutilização de posições originais do layout `troop` para preservar formações do banco de dados
- Regras refinadas para `ActorGridCols` / `EnemyGridCols` (0 = automático; 1 mantém 1 coluna até 3 unidades, depois auto)
- Ajustes na lógica de `calculateEnemyAlignment()` para margens (top/bottom/left/right) e aplicação de offsets mesmo quando `layout = troop`
- Pequenos logs de debug adicionais quando `EnableDebugOverlay` ativo

Observações:
- Offsets globais permitem correções visuais sem alterar layouts; úteis para sprites com pivôs não padronizados
- Captura de `troop` evita alterações irreversíveis nas posições originais do banco de dados

Recomendações de testes:
- Experimente `ActorVerticalOffset` com sprites de tamanhos variados para validar reposicionamento
- Teste batalhas com `layout = troop` e `EnemyAlignment*` para confirmar que o deslocamento é aplicado corretamente

